services:
  scan_backend:
    networks:
      - backend
    command: ["node", "expressServer.js"]
    restart: always
    container_name: backend
    depends_on:
      - db
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - 5001:5001
  db:
    networks:
      - backend
    container_name: scan_db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: qb_aal_dk_db_data
      MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
    volumes:
      - type: "bind"
        source: "./dump/dump.sql"
        target: $DUMP_TARGET
      - type: "volume"
        source: persistance
        target: $PERSISTANCE_TARGET
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  react_app:
    container_name: react_app
    build:
      context: .
      dockerfile: dockerfile.frontend
    ports:
      - "3000:80"  # Map port 80 i containeren til port 3000 på værten
    networks:
      - backend
    depends_on:
      - scan_backend
networks:
  backend:
    driver: bridge
    name: qb_product_backend
volumes:
  persistance:
